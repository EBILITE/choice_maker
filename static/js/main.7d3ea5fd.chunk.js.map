{"version":3,"sources":["QuizData.js","Quiz.js","index.js"],"names":["QuizData","id","question","options","answer","Quiz","props","loadQuiz","currentIndex","state","setState","nextQuestionHandler","userAnswer","score","checkAnswer","disabled","finishHandler","length","quizEnd","this","prevProps","prevState","map","item","index","className","option","onClick","Component","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"0LAAaA,EAAW,CACpB,CACIC,GAAI,EACJC,SAAS,kCACTC,QAAS,CAAC,YAAD,wBACTC,OAAO,SAEX,CACIH,GAAI,EACJC,SAAS,gCACTC,QAAS,CAAC,SAAD,6BACTC,OAAO,aAEX,CACIH,GAAI,EACJC,SAAS,oCACTC,QAAS,CAAC,SAAD,0BACTC,OAAO,UAEX,CACIH,GAAI,EACJC,SAAS,iCACTC,QAAS,CAAC,YAAD,6BACTC,OAAO,UAEX,CACIH,GAAI,EACJC,SAAS,gCACTC,QAAS,CAAC,SAAD,gCACTC,OAAO,a,eCgGAC,EAzHf,kDACI,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAaVC,SAAW,WACP,IAAOC,EAAgB,EAAKC,MAArBD,aACP,EAAKE,UAAS,WACV,MAAO,CACHR,SAAUF,EAASQ,GAAcN,SACjCC,QAAUH,EAASQ,GAAcL,QACjCC,OAAQJ,EAASQ,GAAcJ,YApBxB,EA0BnBO,oBAAsB,WAClB,MAAoC,EAAKF,MAAlCG,EAAP,EAAOA,WAAYR,EAAnB,EAAmBA,OAAQS,EAA3B,EAA2BA,MAExBD,IAAeR,GACd,EAAKM,SAAS,CACVG,MAAOA,EAAQ,IAGvB,EAAKH,SAAS,CACVF,aAAc,EAAKC,MAAMD,aAAe,EACxCI,WAAY,QApCD,EA4CnBE,YAAc,SAAAV,GACV,EAAKM,SAAS,CACVE,WAAYR,EACZW,UAAU,KA/CC,EAgEnBC,cAAgB,WACT,EAAKP,MAAMD,eAAiBR,EAASiB,OAAS,GAC7C,EAAKP,SAAS,CACVQ,SAAQ,KAhEhB,EAAKT,MAAQ,CACRG,WAAW,KACXJ,aAAc,EACdL,QAAS,GACTe,SAAS,EACTL,MAAO,EACPE,UAAU,GATA,EADvB,qDAyCI,WACII,KAAKZ,aA1Cb,gCAoDI,SAAmBa,EAAWC,GAC1B,IAAMb,EAAgBW,KAAKV,MAArBD,aACHW,KAAKV,MAAMD,eAAiBa,EAAUb,cACrCW,KAAKT,UAAS,WACV,MAAM,CACFR,SAAUF,EAASQ,GAAcN,SACjCC,QAASH,EAASQ,GAAcL,QAChCC,OAAQJ,EAASQ,GAAcJ,aA3DnD,oBAyEI,WAAU,IAAD,OACL,EAAyDe,KAAKV,MAAxDP,EAAN,EAAMA,SAASC,EAAf,EAAeA,QAAQK,EAAvB,EAAuBA,aAAaI,EAApC,EAAoCA,WAEpC,OAFA,EAA+CM,QAIvC,gCACI,6DAAgCC,KAAKV,MAAMI,MAA3C,aACA,sEACA,6BACKb,EAASsB,KAAI,SAACC,EAAMC,GAAP,OACV,oBAAIC,UAAU,UAAd,SACKF,EAAKnB,QADmBoB,WAS7C,gCACI,6BAAKtB,IACL,kDAAmBM,EAAe,EAAlC,eAA0CR,EAASiB,UAE/Cd,EAAQmB,KAAI,SAAAI,GAAM,OACd,mBAAqBD,UAAS,kBAAab,IAAec,EAAQ,WAAY,MAC9EC,QAAW,kBAAM,EAAKb,YAAYY,IADlC,SAGKA,GAHKA,EAAOzB,OASxBO,EAAeR,EAASiB,OAAS,GAClC,wBAAQF,SAAYI,KAAKV,MAAMM,SAAUY,QAASR,KAAKR,oBAAvD,2BAICH,IAAiBR,EAASiB,OAAS,GACpC,wBAAQU,QAASR,KAAKH,cAAeD,SAAYI,KAAKV,MAAMM,SAA5D,2BAhHhB,GAA0Ba,aCA1B,SAASC,IACP,OACE,8BACI,cAAC,EAAD,MAKOA,gBAETC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAACL,EAAD,IAAaC,K","file":"static/js/main.7d3ea5fd.chunk.js","sourcesContent":["export const QuizData = [\r\n    {\r\n        id: 0,\r\n        question: `What is the capital of Nigeria?`,\r\n        options: [`New Delhi`, `Abuja`, `Aba`, `Onisha`],\r\n        answer: `Abuja`\r\n    },\r\n    {\r\n        id: 1,\r\n        question: `What is the capital of India?`,\r\n        options: [`Punjab`, `Awka`, `Owerri`, `New Delhi`],\r\n        answer: `New Delhi`\r\n    },\r\n    {\r\n        id: 2,\r\n        question: `What is the capital of Australia?`,\r\n        options: [`Mumbai`, `Abuja`, `Warri`, `Sydney`],\r\n        answer: `Sydney`\r\n    },\r\n    {\r\n        id: 3,\r\n        question: `What is the capital of Turkey?`,\r\n        options: [`Bangalore`, `Ankara`, `Istanbul`, `Enugu`],\r\n        answer: `Ankara`\r\n    },\r\n    {\r\n        id: 4,\r\n        question: `What is the capital of Syria?`,\r\n        options: [`Rimadi`, `Damascus`, `Owerri`, `Tel Aviv`],\r\n        answer: `Damascus`\r\n    },\r\n]","import React, { Component } from 'react';\r\nimport {QuizData} from './QuizData';\r\nimport './style.css';\r\n\r\nexport class Quiz extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             userAnswer:null,\r\n             currentIndex: 0,\r\n             options: [],\r\n             quizEnd: false,\r\n             score: 0,\r\n             disabled: true\r\n\r\n        }\r\n    }\r\n\r\n    loadQuiz = () => {\r\n        const {currentIndex} = this.state //get the current index\r\n        this.setState(() => {\r\n            return {\r\n                question: QuizData[currentIndex].question,\r\n                options : QuizData[currentIndex].options,\r\n                answer: QuizData[currentIndex].answer          \r\n            }\r\n        }\r\n        )\r\n    }\r\n\r\n    nextQuestionHandler = () => {\r\n        const {userAnswer, answer, score} = this.state\r\n\r\n        if(userAnswer === answer){\r\n            this.setState({\r\n                score: score + 1\r\n            })\r\n        }\r\n        this.setState({\r\n            currentIndex: this.state.currentIndex + 1,\r\n            userAnswer: null\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.loadQuiz();\r\n    }\r\n\r\n    checkAnswer = answer => {\r\n        this.setState({\r\n            userAnswer: answer,\r\n            disabled: false\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        const{currentIndex} = this.state;\r\n        if(this.state.currentIndex !== prevState.currentIndex){\r\n            this.setState(() => {\r\n                return{\r\n                    question: QuizData[currentIndex].question,\r\n                    options: QuizData[currentIndex].options,\r\n                    answer: QuizData[currentIndex].answer\r\n                }\r\n            }) \r\n        }\r\n    }\r\n\r\n    finishHandler = () => {\r\n        if(this.state.currentIndex === QuizData.length - 1){\r\n            this.setState({\r\n                quizEnd:true\r\n            })\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const{question,options,currentIndex,userAnswer,quizEnd}= this.state\r\n        \r\n        if(quizEnd){\r\n            return(\r\n                <div>\r\n                    <h1> Game Over, Final Score is {this.state.score} points</h1>\r\n                    <p> The correct Answers for the Quiz are</p>\r\n                    <ul>\r\n                        {QuizData.map((item, index) =>(\r\n                            <li className=\"options\" key={index}>\r\n                                {item.answer}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <h2>{question}</h2>\r\n                <span>{`Question ${currentIndex + 1} of ${QuizData.length}`}</span>\r\n                {\r\n                    options.map(option =>\r\n                        <p key = {option.id} className={`options ${userAnswer === option? \"selected\": null}`}\r\n                        onClick = {() => this.checkAnswer(option)}\r\n                        >\r\n                            {option}\r\n                        </p>\r\n                        \r\n                    )\r\n                }\r\n\r\n                {currentIndex < QuizData.length - 1 &&\r\n                <button disabled = {this.state.disabled} onClick={this.nextQuestionHandler}>\r\n                    Next Question\r\n                </button>}\r\n\r\n                {currentIndex === QuizData.length - 1 &&\r\n                <button onClick={this.finishHandler} disabled = {this.state.disabled}>\r\n                    Finish\r\n                </button>}\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz\r\n","import  ReactDOM  from 'react-dom'\r\nimport React from 'react'\r\nimport Quiz from './Quiz'\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n        <Quiz/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n\r\nconst rootElement = document.getElementById('root')\r\nReactDOM.render(<App></App>, rootElement)\r\n"],"sourceRoot":""}